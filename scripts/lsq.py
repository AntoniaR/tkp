#y_meas = y_true + 2*randn(len(x))  
y_meas = [2.5439507334465521, 2.0942612689019486, 2.1797921613273652, 2.1038790014801436, 2.2599548078399474, 2.4980234220106006, 2.5204749097202517, 2.4875275252794635, 2.1873086860215976, 2.0423166329709233, 1.8794652413222614, 2.3367682813231325, 1.8928899930459919, 1.9557262655120391, 2.7955732988941455, 2.218150602068151, 2.1805950313683695, 2.3748677641707925, 2.3254804699101586, 2.2946959341725286, 2.8114951355845306, 2.9270360315674568, 2.7107671749840314, 2.9255826869638972, 1.9102041588205227, 1.9373634596568334, 2.6077580223346377, 2.0831511295443783, 2.5688952480689786, 2.1043775510065603, 2.6208623340046615, 2.2330280094917958, 1.8901440211025016, 2.5629071472576288, 2.6999780518995173, 3.0372573651202286, 1.9134827117534337, 2.3833798350101141, 2.5531001046023065, 2.3930400456370653, 2.8463055337332328, 2.3716000971661235, 2.8653062382307839, 2.1270974859559377, 1.8079638462719578, 2.6429979956094303, 2.8463055337332328, 2.5540898061546788, 2.6711577916052689, 2.3956237989760352, 1.6599524090828854, 2.6969367302137042, 2.6910525046205107, 2.5629071472576288, 2.6067925436147807, 2.4667981292354679, 2.0914780886665407, 2.31033849685361, 2.320681166876573, 2.6059812169594383, 2.2553582895867135, 2.1236315772582319, 2.6355946398794319, 2.2300295587954571, 2.2654268533795117, 2.6211550369680303, 2.1808889121003596, 2.8428886003193869, 2.5740502218109231, 2.1728995378923379, 2.6744622574619239, 1.7078758378909626, 2.8133970433373356, 2.3401544752791832, 2.1296098957428504, 2.5923658500996707, 2.3322455040044425, 2.4798499711890951, 2.4784157028425424, 2.1143983964875437, 2.0609659460347904, 2.1438767011280548, 2.1439704020328243, 1.9284415342557406, 1.9743568088808772, 2.1096038423004972, 1.9088318857179216, 2.166859198126394, 2.7087442144056846, 2.7557902976135233, 2.0356009407178219, 2.1753069922711359, 2.4781658625499174, 2.2011755078549009, 2.3416790058819705, 2.4460687331914723, 1.9717604094229084, 2.3699397231585535, 2.3493315516528268, 2.1529897216876051, 2.3630302779015313, 2.4240212830637549, 1.7670186029525534, 3.0082904015066685, 2.0787624684568553, 2.2087732536906919, 2.0790544704892273, 2.3084736116240823, 2.4288473887856914, 2.2308778599728525, 2.20632876155222, 1.9098882398328736, 1.992626761087738, 2.2347300125478107, 1.7663708688605622, 1.863475026572792, 2.0903501207619639, 2.0486171130412649, 1.9799778798723566, 1.827257873507754, 1.8759587763197945, 2.1028981721088238, 2.371921278111027, 2.3778428568913319, 1.7868155463275019, 1.7135716391548104, 2.0068321910474034, 2.0534898007039524, 1.7253751349320992, 1.9568549865531781, 2.0784551864955167, 1.9747228759906448, 1.7499576705933357, 1.8555230089487293, 2.2199630741389047, 1.9613197795472694, 1.8056845810224207, 2.1768104441880403, 1.927656657766422, 2.0974338579307514, 1.9753348248202018, 2.0205311990513026, 2.0405898282323323, 1.8234261400901759, 1.8729907055499897, 1.808542024668591, 1.6774497835217879, 2.0574027789622393, 1.720470075705353, 2.063165429447571, 2.0301288951782581, 1.853451881580777, 2.0882947125802906, 1.6487895238947352, 2.18858781390816, 1.5393436063871875, 1.8553495863218519, 1.6403839887142533, 1.5596402737863304, 1.6901930755621433, 1.8326880603532454, 1.6831032011841149, 1.7690939603721287, 1.6822374073563451, 1.7736060330659682, 1.4878155182361086, 1.4495875531474889, 1.6167442936105474, 1.6542011926543263, 1.4609905586841014, 1.4834285549233657, 1.4648773204423506, 1.4791246036034722, 1.478300010308959, 1.2498063396242165, 1.2961189854817095, 1.4883604160429986, 1.2729168732863578, 1.1636286477314002, 1.4150413979067218, 1.4039829989957131, 1.3006679870742293, 1.3550796898266586, 1.2057222582355098, 1.2753832108925343, 1.2251946362499886, 1.3502473970552036, 1.26291909044254, 1.3315339469894065, 1.3132745828320693, 1.4232012080241392, 1.3826318956711676, 1.4811631844112745, 1.4969009974159553, 1.6686778069426462, 1.8913106104902588, 2.0337784194078936, 2.2630345026195995, 2.7860741273125691, 3.2345611052323986, 4.3295080311161174, 5.3456353657456219, 7.8004327593486327, 13.820937484451457, 48.918832535815525, 237.66968167199633, 376.60594887322969, 1719.2006435651026, 11111.042056392822]

from pylab import *
import sys

x = arange(-100,4.5,0.5)  

#b = [3.62115617e+00, 1.72887262e-09, -4.22701338e+00, 2.92729245e-01]
#y_true = b[0] + b[1] * x * exp(-(b[2] - x))

def residuals(p, y, x):  
    a0,a1,a2,a3 = p  
    err = y - (a0 + a1 * x * exp(-(a2 - a3 * x)))
    return err  

def peval(x, p):  
    return p[0] + p[1] * x * exp(-(p[2] - p[3] * x))

p0 = [2.3, 0.1, -5.0, 0.3]
print "init guess = ", p0

c0 = float(sys.argv[1])
c1 = float(sys.argv[2])
c2 = float(sys.argv[3])
c3 = float(sys.argv[4])

c = [c0,c1,c2,c3]
print "my fit = ", c
y_myfit = c[0] + c[1] * x * exp(-(c[2] - c[3] * x))

from scipy.optimize import leastsq  
plsq = leastsq(residuals, p0, args=(y_meas, x))  
print "lstsqfit = ", plsq[0]  

y_lstsq = peval(x,plsq[0])
#print "y_meas =", y_meas
#print "y_lstsq =", y_lstsq
#print "chi2=",residuals(plsq[0], y, x)
semilogy(x,peval(x,plsq[0]),'b-',linewidth=2)  
semilogy(x,y_myfit,'k-',linewidth=2)  
#semilogy(x,y_true,'c-')  
semilogy(x,y_meas,'r-')  
#scatter(x,log10(y_meas),color='r',marker='o')  
#scatter(x,y_meas,color='r',marker='o')  
#xlim(-20,0)
#ylim(-5,10)
title('Least-squares fit to noisy data')  
grid(True)
savefig('lstsq.eps',dpi=600)

